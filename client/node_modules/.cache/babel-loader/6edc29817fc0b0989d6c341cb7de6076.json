{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\n * AddSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\n\nexport default class AddSong_Transaction extends jsTPS_Transaction {\n  constructor(store) {\n    super();\n    this.store = store;\n    this.newSongId = null;\n  }\n\n  doTransaction() {\n    this.store.addNewSong();\n    let songBody = {\n      _id: null,\n      title: \"Untitled\",\n      artist: \"Unknown\",\n      youTubeId: \"dQw4w9WgXcQ\"\n    };\n    this.store.currentList.songs.push(songBody);\n  }\n\n  undoTransaction() {\n    let index = this.store.currentList.songs.length - 1;\n    this.store.deleteSongByIndex(index);\n    let newList = [];\n\n    for (let i = 0; i < this.store.currentList.songs.length; i++) {\n      if (i !== index) {\n        newList.push(this.store.currentList.songs[i]);\n      }\n    }\n\n    this.store.currentList.songs = newList;\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","AddSong_Transaction","constructor","store","newSongId","doTransaction","addNewSong","songBody","_id","title","artist","youTubeId","currentList","songs","push","undoTransaction","index","length","deleteSongByIndex","newList","i"],"sources":["/Users/brendansmacbook/Documents/GitHub/Playlister_HW3/Playlister_HW3/client/src/transactions/AddSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\n\n/**\n * AddSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\nexport default class AddSong_Transaction extends jsTPS_Transaction {\n    constructor(store) {\n        super();\n        this.store = store;\n        this.newSongId = null;\n    }\n\n    doTransaction() {\n        this.store.addNewSong();\n        let songBody = { \n            _id: null,\n            title: \"Untitled\", \n            artist: \"Unknown\", \n            youTubeId: \"dQw4w9WgXcQ\"\n        }\n        this.store.currentList.songs.push(songBody);\n    }\n    \n    undoTransaction() {\n        let index = this.store.currentList.songs.length - 1;\n        this.store.deleteSongByIndex(index);\n        \n        let newList = [];\n        for (let i = 0; i < this.store.currentList.songs.length; i++){\n            if(i !== index){\n                newList.push(this.store.currentList.songs[i]);\n            }\n        }\n        this.store.currentList.songs = newList;\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,mBAAN,SAAkCD,iBAAlC,CAAoD;EAC/DE,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKC,SAAL,GAAiB,IAAjB;EACH;;EAEDC,aAAa,GAAG;IACZ,KAAKF,KAAL,CAAWG,UAAX;IACA,IAAIC,QAAQ,GAAG;MACXC,GAAG,EAAE,IADM;MAEXC,KAAK,EAAE,UAFI;MAGXC,MAAM,EAAE,SAHG;MAIXC,SAAS,EAAE;IAJA,CAAf;IAMA,KAAKR,KAAL,CAAWS,WAAX,CAAuBC,KAAvB,CAA6BC,IAA7B,CAAkCP,QAAlC;EACH;;EAEDQ,eAAe,GAAG;IACd,IAAIC,KAAK,GAAG,KAAKb,KAAL,CAAWS,WAAX,CAAuBC,KAAvB,CAA6BI,MAA7B,GAAsC,CAAlD;IACA,KAAKd,KAAL,CAAWe,iBAAX,CAA6BF,KAA7B;IAEA,IAAIG,OAAO,GAAG,EAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjB,KAAL,CAAWS,WAAX,CAAuBC,KAAvB,CAA6BI,MAAjD,EAAyDG,CAAC,EAA1D,EAA6D;MACzD,IAAGA,CAAC,KAAKJ,KAAT,EAAe;QACXG,OAAO,CAACL,IAAR,CAAa,KAAKX,KAAL,CAAWS,WAAX,CAAuBC,KAAvB,CAA6BO,CAA7B,CAAb;MACH;IACJ;;IACD,KAAKjB,KAAL,CAAWS,WAAX,CAAuBC,KAAvB,GAA+BM,OAA/B;EACH;;AA7B8D"},"metadata":{},"sourceType":"module"}