{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\n\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n  constructor(store) {\n    super();\n    this.store = store;\n    this.deletionIndex = -1;\n  }\n\n  doTransaction() {\n    console.log(\"DELETE SONG TRANSACTION\");\n    this.store.deleteSongFromList();\n    let song = this.store.songForDeletion;\n    let playlist = this.store.currentList;\n    let newList = [];\n    let count = 0;\n\n    for (const element of playlist.songs) {\n      if (element._id !== song._id) {\n        newList.push(element);\n        count = count + 1;\n        console.log(element);\n      } else {\n        this.deletionIndex = count;\n      }\n    }\n\n    console.log(\"Deletion Index\");\n    console.log(this.deletionIndex);\n    playlist.songs = newList;\n    this.currentList = playlist;\n    console.log(\"store after delete song transaction\");\n    console.log(this.store.currentList);\n  }\n\n  undoTransaction() {\n    console.log(\"UNDO DELETE SONG TRANSACTION\");\n    this.store.addNewSong();\n    let songBody = {\n      _id: null,\n      title: \"Untitled\",\n      artist: \"Unknown\",\n      youTubeId: \"dQw4w9WgXcQ\"\n    };\n    this.store.currentList.songs.push(songBody);\n    console.log(\"store after adding back song \");\n    console.log(this.store.currentList);\n    let index = this.store.currentList.songs.length - 1;\n    this.store.moveSong(this.dropId, index);\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","DeleteSong_Transaction","constructor","store","deletionIndex","doTransaction","console","log","deleteSongFromList","song","songForDeletion","playlist","currentList","newList","count","element","songs","_id","push","undoTransaction","addNewSong","songBody","title","artist","youTubeId","index","length","moveSong","dropId"],"sources":["/Users/brendansmacbook/Documents/GitHub/Playlister_HW3/Playlister_HW3/client/src/transactions/DeleteSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n    constructor(store) {\n        super();\n        this.store = store;\n        this.deletionIndex = -1;\n    }\n\n    doTransaction() {\n        console.log(\"DELETE SONG TRANSACTION\")\n        this.store.deleteSongFromList();\n\n        let song = this.store.songForDeletion;\n        let playlist = this.store.currentList;\n\n        let newList = [];\n        let count = 0;\n        for(const element of playlist.songs) {\n            if(element._id !== song._id){\n                newList.push(element);\n                count = count + 1;\n                console.log(element);\n            }else{\n                this.deletionIndex = count;\n            }\n        }\n        console.log(\"Deletion Index\")\n        console.log(this.deletionIndex);\n        \n        playlist.songs = newList;\n        this.currentList = playlist;\n        console.log(\"store after delete song transaction\")\n        console.log(this.store.currentList);\n    }\n    \n    undoTransaction() {\n        console.log(\"UNDO DELETE SONG TRANSACTION\")\n        this.store.addNewSong();\n        let songBody = { \n            _id: null,\n            title: \"Untitled\", \n            artist: \"Unknown\", \n            youTubeId: \"dQw4w9WgXcQ\"\n        }\n        this.store.currentList.songs.push(songBody);\n        console.log(\"store after adding back song \")\n        console.log(this.store.currentList);\n\n        let index = this.store.currentList.songs.length-1;\n        this.store.moveSong(this.dropId, index);\n\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,sBAAN,SAAqCD,iBAArC,CAAuD;EAClEE,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKC,aAAL,GAAqB,CAAC,CAAtB;EACH;;EAEDC,aAAa,GAAG;IACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACA,KAAKJ,KAAL,CAAWK,kBAAX;IAEA,IAAIC,IAAI,GAAG,KAAKN,KAAL,CAAWO,eAAtB;IACA,IAAIC,QAAQ,GAAG,KAAKR,KAAL,CAAWS,WAA1B;IAEA,IAAIC,OAAO,GAAG,EAAd;IACA,IAAIC,KAAK,GAAG,CAAZ;;IACA,KAAI,MAAMC,OAAV,IAAqBJ,QAAQ,CAACK,KAA9B,EAAqC;MACjC,IAAGD,OAAO,CAACE,GAAR,KAAgBR,IAAI,CAACQ,GAAxB,EAA4B;QACxBJ,OAAO,CAACK,IAAR,CAAaH,OAAb;QACAD,KAAK,GAAGA,KAAK,GAAG,CAAhB;QACAR,OAAO,CAACC,GAAR,CAAYQ,OAAZ;MACH,CAJD,MAIK;QACD,KAAKX,aAAL,GAAqBU,KAArB;MACH;IACJ;;IACDR,OAAO,CAACC,GAAR,CAAY,gBAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKH,aAAjB;IAEAO,QAAQ,CAACK,KAAT,GAAiBH,OAAjB;IACA,KAAKD,WAAL,GAAmBD,QAAnB;IACAL,OAAO,CAACC,GAAR,CAAY,qCAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWS,WAAvB;EACH;;EAEDO,eAAe,GAAG;IACdb,OAAO,CAACC,GAAR,CAAY,8BAAZ;IACA,KAAKJ,KAAL,CAAWiB,UAAX;IACA,IAAIC,QAAQ,GAAG;MACXJ,GAAG,EAAE,IADM;MAEXK,KAAK,EAAE,UAFI;MAGXC,MAAM,EAAE,SAHG;MAIXC,SAAS,EAAE;IAJA,CAAf;IAMA,KAAKrB,KAAL,CAAWS,WAAX,CAAuBI,KAAvB,CAA6BE,IAA7B,CAAkCG,QAAlC;IACAf,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWS,WAAvB;IAEA,IAAIa,KAAK,GAAG,KAAKtB,KAAL,CAAWS,WAAX,CAAuBI,KAAvB,CAA6BU,MAA7B,GAAoC,CAAhD;IACA,KAAKvB,KAAL,CAAWwB,QAAX,CAAoB,KAAKC,MAAzB,EAAiCH,KAAjC;EAEH;;AAlDiE"},"metadata":{},"sourceType":"module"}