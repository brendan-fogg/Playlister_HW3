{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\n\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n  constructor(store) {\n    super();\n    this.store = store;\n    this.deletionIndex = store.deleteIndex;\n  }\n\n  doTransaction() {\n    console.log(\"DELETE SONG TRANSACTION\");\n    this.store.deleteSongFromList();\n    console.log(\"Store after call:\");\n    console.log(this.store.currentList);\n  }\n\n  undoTransaction() {\n    console.log(\"UNDO DELETE SONG TRANSACTION\");\n    this.store.addNewSong();\n    let songBody = {\n      _id: null,\n      title: \"Untitled\",\n      artist: \"Unknown\",\n      youTubeId: \"dQw4w9WgXcQ\"\n    };\n    this.store.currentList.songs.push(songBody);\n    console.log(\"store after adding back song \");\n    console.log(this.store.currentList);\n    console.log(\"Deletion Index:\");\n    console.log(this.deletionIndex);\n    let index = this.store.currentList.songs.length - 1;\n    this.store.moveSong(this.deletionIndex, index);\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","DeleteSong_Transaction","constructor","store","deletionIndex","deleteIndex","doTransaction","console","log","deleteSongFromList","currentList","undoTransaction","addNewSong","songBody","_id","title","artist","youTubeId","songs","push","index","length","moveSong"],"sources":["/Users/brendansmacbook/Documents/GitHub/Playlister_HW3/Playlister_HW3/client/src/transactions/DeleteSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n    constructor(store) {\n        super();\n        this.store = store;\n        this.deletionIndex = store.deleteIndex;\n    }\n\n    doTransaction() {\n        console.log(\"DELETE SONG TRANSACTION\")\n        this.store.deleteSongFromList();\n        console.log(\"Store after call:\");\n        console.log(this.store.currentList);\n    }\n    \n    undoTransaction() {\n        console.log(\"UNDO DELETE SONG TRANSACTION\")\n        this.store.addNewSong();\n        let songBody = { \n            _id: null,\n            title: \"Untitled\", \n            artist: \"Unknown\", \n            youTubeId: \"dQw4w9WgXcQ\"\n        }\n        this.store.currentList.songs.push(songBody);\n        console.log(\"store after adding back song \")\n        console.log(this.store.currentList);\n\n        console.log(\"Deletion Index:\");\n        console.log(this.deletionIndex);\n        let index = this.store.currentList.songs.length-1;\n        this.store.moveSong(this.deletionIndex, index);\n\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,sBAAN,SAAqCD,iBAArC,CAAuD;EAClEE,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKC,aAAL,GAAqBD,KAAK,CAACE,WAA3B;EACH;;EAEDC,aAAa,GAAG;IACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACA,KAAKL,KAAL,CAAWM,kBAAX;IACAF,OAAO,CAACC,GAAR,CAAY,mBAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWO,WAAvB;EACH;;EAEDC,eAAe,GAAG;IACdJ,OAAO,CAACC,GAAR,CAAY,8BAAZ;IACA,KAAKL,KAAL,CAAWS,UAAX;IACA,IAAIC,QAAQ,GAAG;MACXC,GAAG,EAAE,IADM;MAEXC,KAAK,EAAE,UAFI;MAGXC,MAAM,EAAE,SAHG;MAIXC,SAAS,EAAE;IAJA,CAAf;IAMA,KAAKd,KAAL,CAAWO,WAAX,CAAuBQ,KAAvB,CAA6BC,IAA7B,CAAkCN,QAAlC;IACAN,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWO,WAAvB;IAEAH,OAAO,CAACC,GAAR,CAAY,iBAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKJ,aAAjB;IACA,IAAIgB,KAAK,GAAG,KAAKjB,KAAL,CAAWO,WAAX,CAAuBQ,KAAvB,CAA6BG,MAA7B,GAAoC,CAAhD;IACA,KAAKlB,KAAL,CAAWmB,QAAX,CAAoB,KAAKlB,aAAzB,EAAwCgB,KAAxC;EAEH;;AAhCiE"},"metadata":{},"sourceType":"module"}