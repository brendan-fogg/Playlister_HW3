{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\n\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n  constructor(store) {\n    super();\n    this.store = store;\n  }\n\n  doTransaction() {\n    console.log(\"DELETE SONG TRANSACTION\");\n    this.store.deleteSongFromList();\n    let song = this.store.songForDeletion;\n    let playlist = this.store.currentList;\n    let newList = [];\n\n    for (const element of playlist.songs) {\n      if (element._id !== song._id) {\n        newList.push(element);\n      }\n    }\n\n    playlist.songs = newList;\n    this.currentList = playlist;\n    console.log(\"store after delete song transaction\");\n    console.log(this.store.currentList);\n  }\n\n  undoTransaction() {\n    console.log(\"UNDO DELETE SONG TRANSACTION\");\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","DeleteSong_Transaction","constructor","store","doTransaction","console","log","deleteSongFromList","song","songForDeletion","playlist","currentList","newList","element","songs","_id","push","undoTransaction"],"sources":["/Users/brendansmacbook/Documents/GitHub/Playlister_HW3/Playlister_HW3/client/src/transactions/DeleteSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with adding a \n * song. It will be managed by the transaction stack.\n * \n */\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n    constructor(store) {\n        super();\n        this.store = store;\n    }\n\n    doTransaction() {\n        console.log(\"DELETE SONG TRANSACTION\")\n        this.store.deleteSongFromList();\n\n        let song = this.store.songForDeletion;\n        let playlist = this.store.currentList;\n\n        let newList = [];\n        for(const element of playlist.songs) {\n            if(element._id !== song._id){\n                newList.push(element);\n            }\n        }\n        playlist.songs = newList;\n        this.currentList = playlist;\n        console.log(\"store after delete song transaction\")\n        console.log(this.store.currentList);\n    }\n    \n    undoTransaction() {\n        console.log(\"UNDO DELETE SONG TRANSACTION\")\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,sBAAN,SAAqCD,iBAArC,CAAuD;EAClEE,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKA,KAAL,GAAaA,KAAb;EACH;;EAEDC,aAAa,GAAG;IACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACA,KAAKH,KAAL,CAAWI,kBAAX;IAEA,IAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWM,eAAtB;IACA,IAAIC,QAAQ,GAAG,KAAKP,KAAL,CAAWQ,WAA1B;IAEA,IAAIC,OAAO,GAAG,EAAd;;IACA,KAAI,MAAMC,OAAV,IAAqBH,QAAQ,CAACI,KAA9B,EAAqC;MACjC,IAAGD,OAAO,CAACE,GAAR,KAAgBP,IAAI,CAACO,GAAxB,EAA4B;QACxBH,OAAO,CAACI,IAAR,CAAaH,OAAb;MACH;IACJ;;IACDH,QAAQ,CAACI,KAAT,GAAiBF,OAAjB;IACA,KAAKD,WAAL,GAAmBD,QAAnB;IACAL,OAAO,CAACC,GAAR,CAAY,qCAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWQ,WAAvB;EACH;;EAEDM,eAAe,GAAG;IACdZ,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACH;;AA3BiE"},"metadata":{},"sourceType":"module"}